diff --git src/config/AgaviTestSuitesConfigHandler.class.php src/config/AgaviTestSuitesConfigHandler.class.php
index 5178588..e245625 100644
--- src/config/AgaviTestSuitesConfigHandler.class.php
+++ src/config/AgaviTestSuitesConfigHandler.class.php
@@ -58,11 +58,17 @@ class AgaviTestSuitesConfigHandler extends AgaviXmlConfigHandler
 		// loop over <configuration> elements
 		foreach($document->getConfigurationElements() as $configuration) {
 			foreach($configuration->get('suites') as $current) {
-				$suite =  array('class' => $current->getAttribute('class', 'AgaviTestSuite'));
-				$suite['testfiles'] = array();
+				$suite =  array(
+					'class' => $current->getAttribute('class', 'AgaviTestSuite'),
+					'testfiles' => array(),
+					'directories' => array()
+				);
 				foreach($current->get('testfiles') as $file) {
 					$suite['testfiles'][] = $file->textContent;
 				}
+				foreach($current->get('directories') as $directory) {
+					$suite['directories'][] = $directory->textContent;
+				}
 				$data[$current->getAttribute('name')] = $suite;
 			}
 		}
diff --git src/testing/AgaviTesting.class.php src/testing/AgaviTesting.class.php
index 9738a98..43c049b 100644
--- src/testing/AgaviTesting.class.php
+++ src/testing/AgaviTesting.class.php
@@ -119,7 +119,6 @@ class AgaviTesting
 				if(empty($suites[$name])) {
 					throw new InvalidArgumentException(sprintf('Invalid suite name %1$s.', $name));
 				}
-				
 				$master_suite->addTest(self::createSuite($name, $suites[$name]));		
 			}
 				
@@ -185,9 +184,45 @@ class AgaviTesting
 	 */
 	protected static function createSuite($name, array $suite) 
 	{
+		$base = ! isset($suite['base']) ? 'tests' : $suite['base'];
+		if(!AgaviToolkit::isPathAbsolute($base)) {
+			$base = AgaviConfig::get('core.testing_dir').'/'.$base;
+		}
 		$s = new $suite['class']($name);
+		if(!empty($suite['includes'])) {
+			foreach(
+				new RecursiveIteratorIterator(
+					new AgaviRecursiveDirectoryFilterIterator(
+						new RecursiveDirectoryIterator($base),
+						$suite['includes'],
+						$suite['excludes']
+					),
+					RecursiveIteratorIterator::CHILD_FIRST
+				) as $finfo) {
+
+				if($finfo->isFile()) {
+					$s->addTestFile($finfo->getPathName());
+				}
+			}
+		}
 		foreach($suite['testfiles'] as $file) {
-			$s->addTestFile('tests/'.$file);
+			if(!AgaviToolkit::isPathAbsolute($file)) {
+				$file = $base.'/'.$file;
+			}
+			$s->addTestFile($file);
+		}
+		foreach($suite['directories'] as $directoryPath) {
+			if(!AgaviToolkit::isPathAbsolute($directoryPath)) {
+				$absoluteDirectoryPath = $base.'/'.$directoryPath;
+			} else {
+				$absoluteDirectoryPath = $directoryPath;
+			}
+			foreach (new RecursiveDirectoryIterator($absoluteDirectoryPath) as $filePath) {
+				if ($filePath->isDir()) {
+					continue;
+				}
+				$s->addTestFile($filePath->getPathName());
+			}
 		}
 		return $s;
 	}
